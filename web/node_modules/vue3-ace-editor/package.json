{
  "name": "vue3-ace-editor",
  "version": "2.2.2",
  "description": "Like vue2-ace-editor but more functional and supports Vue 3",
  "main": "index.js",
  "module": "index.js",
  "type": "module",
  "types": "index.d.ts",
  "repository": "git@github.com:CarterLi/vue3-ace-editor.git",
  "author": "李通洲 <carter.li@eoitek.com>",
  "license": "MIT",
  "dependencies": {
    "ace-builds": "^1.4.13",
    "resize-observer-polyfill": "^1.5.1",
    "vue": "^3.2.26"
  },
  "devDependencies": {
    "typescript": "^4.5.4"
  },
  "scripts": {
    "build": "tsc -p ."
  },
  "readme": "vue3-ace-editor\n====================\n\n\n[![npm](https://img.shields.io/npm/v/vue3-ace-editor.svg)](https://www.npmjs.com/package/vue3-ace-editor)\n\n\nA packaging of [ace](https://ace.c9.io/). Inspired by [vue2-ace-editor](https://github.com/chairuosen/vue2-ace-editor), but supports [Vue 3](https://github.com/vuejs/vue-next)\n\n## How to use\n\n1. Install\n\n    ```shell\n    yarn add vue3-ace-editor\n    ```\n\n2. Register it in `components` of Vue options\n\n    ```js\n    import { VAceEditor } from 'vue3-ace-editor';\n\n    export default {\n        data,\n        methods,\n        ...\n        components: {\n            VAceEditor,\n        },\n    }\n    ```\n\n3. Use the component in template\n\n    ```html\n    <v-ace-editor\n        v-model:value=\"content\"\n        @init=\"editorInit\"\n        lang=\"html\"\n        theme=\"chrome\"\n        style=\"height: 300px\" />\n    ```\n\n    prop `v-model:value` is required. `<v-ace-editor>` has no height by default. Its height must be specified manually, or set both `min-lines` and `max-lines` to make the editor's height auto-grow.\n\n    prop `lang`, `theme` is same as [ace-editor's doc](https://github.com/ajaxorg/ace)\n\n## Deferences with [vue2-ace-editor](https://github.com/chairuosen/vue2-ace-editor)\n\n1. This component uses [ace-builds](https://www.npmjs.com/package/ace-builds) directly, instead of the outdated wrapper [brace](https://www.npmjs.com/package/brace)\n1. DOM size changes are detected automatically using [ResizeObserver](resize-observer-polyfill), thus no `width` / `height` props needed.\n1. For easier usage, more props / events added / emitted.\n    1. Prop `readonly`: This Boolean attribute indicates that the user cannot modify the value of the control.\n    1. Prop `placeholder`: A hint to the user of what can be entered in the control.\n    1. Prop `wrap`: Indicates whether the control wraps text.\n    1. Prop `printMargin`: A short hand of `showPrintMargin` and `printMarginColumn`.\n    1. Prop `minLines` and `maxLines`: Specifiy the minimum and maximum number of lines.\n    1. All ace events emitted. Docs can be found here: <https://ace.c9.io/#api=editor&nav=api>\n    1. Some commonly used methods `focus`, `blur`, `selectAll` provided as shortcuts.\n\n## Enable syntax checking\n\nTo enable syntax checking, module `ace/mode/lang_worker` must be registered, and option `useWorker: true` must be set.\n\nTake JSON for example:\n\n```ts\nimport workerJsonUrl from 'ace-builds/src-noconflict/worker-json?url'; // For vite\n\nimport workerJsonUrl from 'file-loader?esModule=false!ace-builds/src-noconflict/worker-json.js'; // For webpack / vue-cli\n\nace.config.setModuleUrl('ace/mode/json_worker', workerJsonUrl);\n```\n\n```html\n<v-ace-editor v-model:value=\"json\" lang=\"json\" :options=\"{ useWorker: true }\" />\n```\n\nSee also https://github.com/CarterLi/vue3-ace-editor/issues/3#issuecomment-768190528 to load the worker file from CDN\n\n## Breaking change\n\nUsing of `ace-builds/webpack-resolver` is removed due to bug https://github.com/CarterLi/vue3-ace-editor/issues/3. You MUST import `theme` and `mode` yourself. eg.\n\n```js\nimport 'ace-builds/src-noconflict/mode-text';\nimport 'ace-builds/src-noconflict/theme-chrome';\n```\n\nFind all supported themes and modes in `node_modules/ace-builds/src-noconflict`\n\n## LICENSE\n\nMIT\n"
}